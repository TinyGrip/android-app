apply plugin: 'com.android.application'

// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def date = new Date()
def buildTime = date.format("dd.MM.yy", TimeZone.getTimeZone("UTC"))
def buildTimeInternal = date.format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {

    compileSdkVersion rootProject.propCompileSdkVersion
    buildToolsVersion rootProject.propBuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.propMinSdkVersion
        targetSdkVersion rootProject.propTargetSdkVersion

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTimeInternal}\""
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            debuggable true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    publishNonDefault true

    productFlavors {
        internal {
            applicationId 'com.tinygrip.android.internal'
        }
        production {
            applicationId 'com.tinygrip.android'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.android.support:wearable:' + rootProject.depAndroidWearSupportVersion
    compile 'com.google.android.gms:play-services-wearable:' + rootProject.depGooglePlayServicesVersion
}
